package command

import (
	"chitchat/data"
	"log"
	"math/rand"
	"strconv"
	"time"
)

var threadPost []string

func init(){
	threadPost = []string{
		"奸雄：宁教我负天下人，休教天下人负我！/吾好梦中杀人！",
		"护驾：来人，护驾！/魏将何在？",
		"阵亡：霸业未成，未成啊...",
		"反馈：下次注意点！/出来混，早晚要还的！",
		"鬼才：吾乃天命之子！/天命？哈哈哈哈哈哈~！",
		"阵亡：难道真的是天命难违？",
		"刚烈：以彼之道，还施彼身！/鼠辈，竟敢伤我！",
		"阵亡：两，两边，都看不见了",
		"屯田：锄禾日当午，汗滴禾下土。/休养生息，备战待敌。",
		"凿险：开辟险路，奇袭敌军！/屯田日久，当建奇功。",
		"急袭：功其不备，出其不意！/偷渡阴平，直取蜀汉！",
		"阵亡：吾破蜀克敌，竟葬于奸贼之手....",
		"倾国：体迅飞凫，飘忽若神。/凌波微步，罗袜生尘。",
		"洛神：仿佛兮若轻云之蔽月。/飘摇兮若流风之回雪。",
		"阵亡：悼良会之永绝兮，哀一逝而异乡。",
		"日出东方央视新闻70小时大直播",
		"香港尖沙咀一片旗海",
		"中央电视塔变成火箭了",
		"胡歌靳东看球姿势   ",
		"刘嘉玲章泽天合照",
		"热依扎 穿衣自由",
		"刘星家到底多有钱",
		"屠呦呦",
		"共和国勋章获得者",
		"新iPhone硬件成本不足售价三成  ",
		"光头警长刘Sir抵达北京",
		"张一山鹿鼎记造型",
		"国庆活动节目单  ",
		"国家勋章和国家荣誉称号正式颁授  ",
		"中国女排战阿根廷14人名单",
		"中国机长点映票房夺冠   ",
		"郑爽巴黎街拍   ",
		"蜡笔小新这段真的有毒   ",
		"和姐妹蹦迪的你",
		"罗永浩还能东山再起吗",
		"盯一个字太久突然不认识了",
		"肖战成立个人工作室",
		"同居后最容易闹矛盾的点",
		"国家最高礼遇迎接功勋",
		"聊天到底该不该秒回  ",
		"人气爆棚的动漫男配角  ",
		"陈飞宇走秀  ",
		"那英  ",
		"谁不想拥有方瑜这样的闺蜜",
		"雷军",
		"华为证实已生产不含美国部件5G基站  ",
		"杨超越巴黎时装周",
		"蔡徐坤海边打水漂",
		"王者荣耀新buff",
		"中国机长",
		"大人常说的女大十八变  ",
		"长大了随他爹变成了表情包",
		"庆祝70周年第四场新闻发布会",
		"社交恐惧症的样子",
		"授勋仪式最感人的7个瞬间",
		"海贼王剧场版定档",
		"香港光头警长北京行心愿单 ",
		"中国红穿搭",
		"国境线上的派出所",
		"黄旭华说这不是我一个人的荣誉",
		"张富清佩戴共和国勋章深情敬礼",
		"我和我的祖国",
		"王一博大张伟合唱生来倔强",
		"四百七十万针绣制开国大典",
		"欧阳娜娜改编天天想你",
		"崇尚英雄才会产生英雄",
		"1 《咏柳》——贺知章(唐)",
		"碧玉妆成一树高, 万条垂下绿丝绦。 不知细叶谁裁出, 二月春风似剪刀。",
		"2 《送元二使安西》——王维(唐)",
		"渭城朝雨悒轻尘, 客舍青青柳色新。 劝君更尽一杯酒, 西出阳关无故人。",
		"3 《黄鹤楼送孟浩然之广陵》——李白(唐)",
		"故人西辞黄鹤楼, 烟花三月下扬州。 孤帆远影碧空尽, 惟见长江天际流。",
		"4 《绝句》——杜甫(唐)",
		"两个黄鹂鸣翠柳, 一行白鹭上青天。 窗含西岭千秋雪, 门泊东吴万里船。",
		"5 《江畔独步寻花》(选一)——杜甫(唐)",
		"黄师塔前江水东, 春光懒困倚微风。 桃花一簇开无主, 可爱深红爱浅红。",
		"6 《春夜喜雨》——杜甫(唐)",
		"好雨知时节 , 当春乃发生 。 随风潜入夜 , 润物细无声 。",
		"野径云俱黑 , 江船火独明 。 晓看红湿处 , 花重锦官城 。",
		"7 《渔歌子》——张志和(唐)",
		"西塞山前白鹭飞, 桃花流水鳜鱼肥。青箬笠, 绿蓑衣, 斜风细雨不须归。",
		"8 《滁州西涧》——韦应物(唐)",
		"独怜幽草涧边生, 上有黄鹂深树鸣。春潮带雨晚来急, 野渡无人舟自横。",
		"9 《竹枝词》(选一)——刘禹锡(唐)",
		"杨柳青青江水平, 闻郎江上唱歌声。东边日出西边雨, 道是无晴却有晴。",
		"10 《乌衣巷》——刘禹锡(唐)",
		"朱雀桥边野草花, 乌衣巷口夕阳斜。 旧时王谢堂前燕, 飞入寻常百姓家。",
		"11 《赋得古原草送别》——白居易(唐)",
		"离离原上草 , 一岁一枯荣 。 野火烧不尽 , 春风吹又生。",
		"远芳侵古道 , 晴翠接荒城 。又送王孙去 , 萋萋满别情 。",
		"12 《大林寺桃花》——白居易(唐)",
		"人间四月芳菲尽, 山寺桃花始盛开。长恨春归无觅处, 不知转入此中来。",
		"13 《绝 句 》——僧志南(宋)",
		"古木阴中系短篷，杖藜扶我过桥东。 沾衣欲湿杏花雨，吹面不寒杨柳风。",
		"14 《题都城南庄》——崔护(唐)",
		"去年今日此门中, 人面桃花相映红。 人面不知何处去, 桃花依旧笑春风。",
		"15 《清明》——杜牧(唐)",
		"清明时节雨纷纷, 路上行人欲断魂。借问酒家何处有? 牧童遥指杏花村。",
		"16 《江南春》——杜牧(唐)",
		"千里莺啼绿映红, 水村山郭酒旗风。南朝四百八十寺, 多少楼台烟雨中。",
		"17 《惠崇—春江晓景》——苏轼(宋)",
		"竹外桃花三两枝, 春江水暖鸭先知. 蒌蒿满地芦芽短, 正是河豚欲上时。",
		"18 《宿新市徐公店》——杨万里(宋)",
		"篱落疏疏一径深, 树头花落未成阴。儿童急走追黄蝶, 飞入菜花无处寻。",
		"19 《春日》——朱熹(宋)",
		"胜日寻芳泗水滨, 无边光景一时新。等闲识得东风面, 万紫千红总是春。",
		"20 《游园不值》——叶绍翁(宋)",
		"应怜屐齿印苍苔, 小扣柴扉久不开。春色满园关不住, 一枝红杏出墙来。",
		"21 《村居》——高鼎(清)",
		"草长莺飞二月天, 拂堤杨柳醉春归。儿童散学归来早, 忙趁东风放纸鸢。",
		"22 《春晓》————孟浩然 (唐)",
		"春眠不觉晓，处处闻啼鸟，夜来风雨声，花落知多少。",
		"23 《晴景》—— 王驾(唐)",
		"雨前初现花间蕊，雨后全无叶底花。蜂蝶纷纷过墙去，疑是春色在邻家。",
		"24 钱塘湖春行—— 白居易( 唐)",
		"孤山寺北贾亭西，水面初平云脚低。几处早莺争暖树，谁家新燕啄春泥。",
		"乱花渐欲迷人眼，浅草才能没马蹄。最爱湖东行不足，绿杨阴里白沙堤。",
		"25 次北固山下 ——王湾(唐)",
		"客路青山外，行舟绿水前。潮平两岸阔，风正一帆悬。",
		"海日生残夜，江春入旧年。乡书何处达?归雁洛阳边。",
		"26 春望——杜甫(唐)",
		"国破山河在，城春草木深。感时花溅泪，恨别鸟惊心。",
		"烽火连三月，家书抵万金。白头搔更短，浑欲不胜簪。",
	}

	log.Println("wrap: init...")
}
/**
	注册机器人
*/
func RegisterWrap() data.User{

	randStr := strconv.Itoa(randNum(100000000,1000000))
	user := data.User{
		Name:     "Robot" + randStr,
		Email:    randStr + "@qq.com",
		Password: "944792",
	}
	if err := user.Create(); err != nil {
		log.Println("wrap: Cannot generate UUID", err)
	}
	return user
}

/**
	灌水发帖
 */
func CreateThreadWrap() string{
	users,err := data.Users(1,20)
	if err != nil {
		log.Println("wrap: query users fail", err)
	}
	rand.Seed(time.Now().Unix())
	user := users[rand.Intn(len(users))]
	topic := threadPost[rand.Intn(len(threadPost))]
	if _, err := user.CreateThread(topic); err != nil {
		log.Println("wrap: Cannot create thread",err)
	}
	return topic
}

/**
灌水回复
*/
func CreatePostWrap() string{
	users,err := data.Users(1,20)
	if err != nil {
		log.Println("wrap: query users fail", err)
		return ""
	}
	rand.Seed(time.Now().Unix())
	user := users[rand.Intn(len(users))]
	body := threadPost[rand.Intn(len(threadPost))]
	threads,err := data.Threads(1,5)
	if err != nil{
		return ""
	}
	thread := threads[rand.Intn(len(threads))]
	if _, err := user.CreatePost(thread, body); err != nil {
		log.Println("wrap: Cannot create post",err)
		return ""
	}
	return body
}

func randNum(max,min int) int{
	rand.Seed(time.Now().Unix())
	return rand.Intn(max-min)
}
